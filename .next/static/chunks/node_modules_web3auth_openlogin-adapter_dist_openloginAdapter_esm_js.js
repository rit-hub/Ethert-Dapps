"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_web3auth_openlogin-adapter_dist_openloginAdapter_esm_js"],{

/***/ "./node_modules/@web3auth/openlogin-adapter/dist/openloginAdapter.esm.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@web3auth/openlogin-adapter/dist/openloginAdapter.esm.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"OpenloginAdapter\": function() { return /* binding */ OpenloginAdapter; },\n/* harmony export */   \"getOpenloginDefaultOptions\": function() { return /* binding */ getOpenloginDefaultOptions; }\n/* harmony export */ });\n/* harmony import */ var _toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @toruslabs/openlogin */ \"./node_modules/@toruslabs/openlogin/dist/openlogin.esm.js\");\n/* harmony import */ var _web3auth_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3auth/base */ \"./node_modules/@web3auth/base/dist/base.esm.js\");\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var lodash_merge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash.merge */ \"./node_modules/lodash.merge/index.js\");\n/* harmony import */ var lodash_merge__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_merge__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\nconst getOpenloginDefaultOptions = (chainNamespace, chainId) => {\n  return {\n    adapterSettings: {\n      network: _toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__.OPENLOGIN_NETWORK.MAINNET,\n      clientId: \"\",\n      uxMode: _toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__.UX_MODE.POPUP\n    },\n    chainConfig: chainNamespace ? (0,_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.getChainConfig)(chainNamespace, chainId) : undefined,\n    loginSettings: {\n      relogin: true\n    }\n  };\n};\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass OpenloginAdapter extends _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.BaseAdapter {\n  constructor(params) {\n    var _params$chainConfig, _params$chainConfig2, _params$chainConfig3;\n\n    super();\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, \"name\", _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WALLET_ADAPTERS.OPENLOGIN);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, \"adapterNamespace\", _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_NAMESPACES.MULTICHAIN);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, \"type\", _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_CATEGORY.IN_APP);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, \"openloginInstance\", null);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, \"status\", _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_STATUS.NOT_READY);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, \"currentChainNamespace\", _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.CHAIN_NAMESPACES.EIP155);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, \"openloginOptions\", void 0);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, \"loginSettings\", {});\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, \"privKeyProvider\", null);\n\n    _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.log.debug(\"const openlogin adapter\", params);\n    const defaultOptions = getOpenloginDefaultOptions((_params$chainConfig = params.chainConfig) === null || _params$chainConfig === void 0 ? void 0 : _params$chainConfig.chainNamespace, (_params$chainConfig2 = params.chainConfig) === null || _params$chainConfig2 === void 0 ? void 0 : _params$chainConfig2.chainId);\n    this.openloginOptions = _objectSpread(_objectSpread({\n      clientId: \"\",\n      network: _toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__.OPENLOGIN_NETWORK.MAINNET\n    }, defaultOptions.adapterSettings), params.adapterSettings || {});\n    this.loginSettings = _objectSpread(_objectSpread({}, defaultOptions.loginSettings), params.loginSettings); // if no chainNamespace is passed then chain config should be set before calling init\n\n    if ((_params$chainConfig3 = params.chainConfig) !== null && _params$chainConfig3 !== void 0 && _params$chainConfig3.chainNamespace) {\n      var _params$chainConfig4;\n\n      this.currentChainNamespace = (_params$chainConfig4 = params.chainConfig) === null || _params$chainConfig4 === void 0 ? void 0 : _params$chainConfig4.chainNamespace;\n      const defaultChainIdConfig = defaultOptions.chainConfig ? defaultOptions.chainConfig : {};\n      this.chainConfig = _objectSpread(_objectSpread({}, defaultChainIdConfig), params === null || params === void 0 ? void 0 : params.chainConfig);\n      _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.log.debug(\"const openlogin chainConfig\", this.chainConfig);\n\n      if (!this.chainConfig.rpcTarget) {\n        throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WalletInitializationError.invalidParams(\"rpcTarget is required in chainConfig\");\n      }\n    }\n  }\n\n  get chainConfigProxy() {\n    return this.chainConfig ? _objectSpread({}, this.chainConfig) : null;\n  }\n\n  get provider() {\n    var _this$privKeyProvider;\n\n    return ((_this$privKeyProvider = this.privKeyProvider) === null || _this$privKeyProvider === void 0 ? void 0 : _this$privKeyProvider.provider) || null;\n  }\n\n  set provider(_) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options) {\n    var _this$openloginOption;\n\n    super.checkInitializationRequirements();\n    if (!((_this$openloginOption = this.openloginOptions) !== null && _this$openloginOption !== void 0 && _this$openloginOption.clientId)) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WalletInitializationError.invalidParams(\"clientId is required before openlogin's initialization\");\n    if (!this.chainConfig) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WalletInitializationError.invalidParams(\"chainConfig is required before initialization\");\n    this.openloginInstance = new _toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.openloginOptions);\n    const redirectResult = (0,_toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__.getHashQueryParams)();\n    let isRedirectResult = true;\n\n    if (Object.keys(redirectResult).length > 0 && redirectResult.result) {\n      isRedirectResult = true;\n    }\n\n    await this.openloginInstance.init();\n    this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_STATUS.READY;\n    this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_EVENTS.READY, _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WALLET_ADAPTERS.OPENLOGIN);\n\n    try {\n      // connect only if it is redirect result or if connect (adapter is cached/already connected in same session) is true\n      if (this.openloginInstance.privKey && (options.autoConnect || isRedirectResult)) {\n        await this.connect();\n      }\n    } catch (error) {\n      _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.log.error(\"Failed to connect with cached openlogin provider\", error);\n      this.emit(\"ERRORED\", error);\n    }\n  }\n\n  async connect(params) {\n    super.checkConnectionRequirements();\n    this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_STATUS.CONNECTING;\n    this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_EVENTS.CONNECTING, _objectSpread(_objectSpread({}, params), {}, {\n      adapter: _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WALLET_ADAPTERS.OPENLOGIN\n    }));\n\n    try {\n      await this.connectWithProvider(params);\n      return this.provider;\n    } catch (error) {\n      _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.log.error(\"Failed to connect with openlogin provider\", error); // ready again to be connected\n\n      this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_STATUS.READY;\n      this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_EVENTS.ERRORED, error);\n\n      if (error !== null && error !== void 0 && error.message.includes(\"user closed popup\")) {\n        throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WalletLoginError.popupClosed();\n      }\n\n      throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WalletLoginError.connectionError(\"Failed to login with openlogin\");\n    }\n  }\n\n  async disconnect() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      cleanup: false\n    };\n    if (this.status !== _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_STATUS.CONNECTED) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.openloginInstance) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WalletInitializationError.notReady(\"openloginInstance is not ready\");\n    await this.openloginInstance.logout();\n\n    if (options.cleanup) {\n      this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_STATUS.NOT_READY;\n      this.openloginInstance = null;\n      this.privKeyProvider = null;\n    } else {\n      // ready to be connected again\n      this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_STATUS.READY;\n    }\n\n    this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_EVENTS.DISCONNECTED);\n  }\n\n  async getUserInfo() {\n    if (this.status !== _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_STATUS.CONNECTED) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.openloginInstance) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WalletInitializationError.notReady(\"openloginInstance is not ready\");\n    const userInfo = await this.openloginInstance.getUserInfo();\n    return userInfo;\n  } // should be called only before initialization.\n\n\n  setAdapterSettings(adapterSettings) {\n    if (this.status === _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_STATUS.READY) return;\n    const defaultOptions = getOpenloginDefaultOptions();\n    this.openloginOptions = _objectSpread(_objectSpread(_objectSpread({}, defaultOptions.adapterSettings), this.openloginOptions || {}), adapterSettings);\n  } // should be called only before initialization.\n\n\n  setChainConfig(customChainConfig) {\n    super.setChainConfig(customChainConfig);\n    this.currentChainNamespace = customChainConfig.chainNamespace;\n  }\n\n  async connectWithProvider(params) {\n    if (!this.chainConfig) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WalletInitializationError.invalidParams(\"chainConfig is required before initialization\");\n    if (!this.openloginInstance) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WalletInitializationError.notReady(\"openloginInstance is not ready\");\n\n    if (this.currentChainNamespace === _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.CHAIN_NAMESPACES.SOLANA) {\n      const {\n        SolanaPrivateKeyProvider\n      } = await __webpack_require__.e(/*! import() */ \"node_modules_web3auth_solana-provider_dist_solanaProvider_esm_js\").then(__webpack_require__.bind(__webpack_require__, /*! @web3auth/solana-provider */ \"./node_modules/@web3auth/solana-provider/dist/solanaProvider.esm.js\"));\n      this.privKeyProvider = new SolanaPrivateKeyProvider({\n        config: {\n          chainConfig: this.chainConfig\n        }\n      });\n    } else if (this.currentChainNamespace === _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.CHAIN_NAMESPACES.EIP155) {\n      const {\n        EthereumPrivateKeyProvider\n      } = await __webpack_require__.e(/*! import() */ \"node_modules_web3auth_ethereum-provider_dist_ethereumProvider_esm_js\").then(__webpack_require__.bind(__webpack_require__, /*! @web3auth/ethereum-provider */ \"./node_modules/@web3auth/ethereum-provider/dist/ethereumProvider.esm.js\"));\n      this.privKeyProvider = new EthereumPrivateKeyProvider({\n        config: {\n          chainConfig: this.chainConfig\n        }\n      });\n    } else {\n      throw new Error(\"Invalid chainNamespace: \".concat(this.currentChainNamespace, \" found while connecting to wallet\"));\n    } // if not logged in then login\n\n\n    if (!this.openloginInstance.privKey && params) {\n      await this.openloginInstance.login(lodash_merge__WEBPACK_IMPORTED_MODULE_3___default()(this.loginSettings, {\n        loginProvider: params.loginProvider\n      }, {\n        extraLoginOptions: {\n          login_hint: params === null || params === void 0 ? void 0 : params.login_hint\n        }\n      }));\n    }\n\n    let finalPrivKey = this.openloginInstance.privKey;\n\n    if (finalPrivKey) {\n      if (this.currentChainNamespace === _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.CHAIN_NAMESPACES.SOLANA) {\n        const {\n          getED25519Key\n        } = await __webpack_require__.e(/*! import() */ \"node_modules_toruslabs_openlogin-ed25519_dist_openloginEd25519_esm_js\").then(__webpack_require__.bind(__webpack_require__, /*! @toruslabs/openlogin-ed25519 */ \"./node_modules/@toruslabs/openlogin-ed25519/dist/openloginEd25519.esm.js\"));\n        finalPrivKey = getED25519Key(finalPrivKey).sk.toString(\"hex\");\n      }\n\n      await this.privKeyProvider.setupProvider(finalPrivKey);\n      this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_STATUS.CONNECTED;\n      this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_EVENTS.CONNECTED, {\n        adapter: _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WALLET_ADAPTERS.OPENLOGIN,\n        reconnected: !params\n      });\n    }\n  }\n\n}\n\n\n//# sourceMappingURL=openloginAdapter.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNhdXRoL29wZW5sb2dpbi1hZGFwdGVyL2Rpc3Qvb3BlbmxvZ2luQWRhcHRlci5lc20uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFpRztBQUN1SDtBQUNwSjtBQUNuQzs7QUFFakM7QUFDQTtBQUNBO0FBQ0EsZUFBZSwyRUFBeUI7QUFDeEM7QUFDQSxjQUFjLCtEQUFhO0FBQzNCLEtBQUs7QUFDTCxrQ0FBa0MsOERBQWM7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwyQ0FBMkMsZ0NBQWdDLG9DQUFvQyxvREFBb0QsNkRBQTZELGlFQUFpRSxzQ0FBc0M7O0FBRXZVLGlDQUFpQyxnQkFBZ0Isc0JBQXNCLE9BQU8sdURBQXVELDZEQUE2RCxpRkFBZSw2QkFBNkIsb0tBQW9LLG1GQUFtRixLQUFLO0FBQzFlLCtCQUErQix1REFBVztBQUMxQztBQUNBOztBQUVBOztBQUVBLElBQUksaUZBQWUsZUFBZSxxRUFBeUI7O0FBRTNELElBQUksaUZBQWUsMkJBQTJCLHlFQUE2Qjs7QUFFM0UsSUFBSSxpRkFBZSxlQUFlLG1FQUF1Qjs7QUFFekQsSUFBSSxpRkFBZTs7QUFFbkIsSUFBSSxpRkFBZSxpQkFBaUIsb0VBQXdCOztBQUU1RCxJQUFJLGlGQUFlLGdDQUFnQyxtRUFBdUI7O0FBRTFFLElBQUksaUZBQWU7O0FBRW5CLElBQUksaUZBQWUsMEJBQTBCOztBQUU3QyxJQUFJLGlGQUFlOztBQUVuQixJQUFJLHFEQUFTO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsZUFBZSwyRUFBeUI7QUFDeEMsS0FBSywrREFBK0Q7QUFDcEUsdURBQXVELHdEQUF3RDs7QUFFL0c7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsdURBQXVEO0FBQ3ZELE1BQU0scURBQVM7O0FBRWY7QUFDQSxjQUFjLG1GQUF1QztBQUNyRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw4Q0FBOEM7QUFDOUM7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsaUpBQWlKLG1GQUF1QztBQUN4TCxpQ0FBaUMsbUZBQXVDO0FBQ3hFLGlDQUFpQyw0REFBUztBQUMxQywyQkFBMkIsd0VBQWtCO0FBQzdDOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGtCQUFrQixnRUFBb0I7QUFDdEMsY0FBYyxnRUFBb0IsRUFBRSxxRUFBeUI7O0FBRTdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ04sTUFBTSxxREFBUztBQUNmO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0JBQWtCLHFFQUF5QjtBQUMzQyxjQUFjLHFFQUF5QixnQ0FBZ0MsYUFBYTtBQUNwRixlQUFlLHFFQUF5QjtBQUN4QyxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTixNQUFNLHFEQUFTLHNEQUFzRDs7QUFFckUsb0JBQW9CLGdFQUFvQjtBQUN4QyxnQkFBZ0Isa0VBQXNCOztBQUV0QztBQUNBLGNBQWMsd0VBQTRCO0FBQzFDOztBQUVBLFlBQVksNEVBQWdDO0FBQzVDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0Isb0VBQXdCLFFBQVEsOEVBQWtDO0FBQzFGLHVDQUF1Qyw4RUFBa0M7QUFDekU7O0FBRUE7QUFDQSxvQkFBb0Isb0VBQXdCO0FBQzVDO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxvQkFBb0IsZ0VBQW9CO0FBQ3hDOztBQUVBLGNBQWMsdUVBQTJCO0FBQ3pDOztBQUVBO0FBQ0Esd0JBQXdCLG9FQUF3QixRQUFRLDhFQUFrQztBQUMxRix1Q0FBdUMsOEVBQWtDO0FBQ3pFO0FBQ0E7QUFDQSxJQUFJOzs7QUFHSjtBQUNBLHdCQUF3QixnRUFBb0I7QUFDNUM7QUFDQSx3RUFBd0UsOERBQThEO0FBQ3RJLElBQUk7OztBQUdKO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsaUNBQWlDLG1GQUF1QztBQUN4RSx1Q0FBdUMsOEVBQWtDOztBQUV6RSx1Q0FBdUMsbUVBQXVCO0FBQzlEO0FBQ0E7QUFDQSxRQUFRLFFBQVEscVFBQW1DO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLE1BQU0sd0NBQXdDLG1FQUF1QjtBQUNyRTtBQUNBO0FBQ0EsUUFBUSxRQUFRLCtRQUFxQztBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxNQUFNO0FBQ047QUFDQSxNQUFNOzs7QUFHTjtBQUNBLHlDQUF5QyxtREFBSztBQUM5QztBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7O0FBRUE7QUFDQSx5Q0FBeUMsbUVBQXVCO0FBQ2hFO0FBQ0E7QUFDQSxVQUFVLFFBQVEsa1JBQXNDO0FBQ3hEO0FBQ0E7O0FBRUE7QUFDQSxvQkFBb0Isb0VBQXdCO0FBQzVDLGdCQUFnQixvRUFBd0I7QUFDeEMsaUJBQWlCLHFFQUF5QjtBQUMxQztBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBOztBQUV3RDtBQUN4RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHdlYjNhdXRoL29wZW5sb2dpbi1hZGFwdGVyL2Rpc3Qvb3BlbmxvZ2luQWRhcHRlci5lc20uanM/NWU2YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgT3BlbkxvZ2luLCB7IE9QRU5MT0dJTl9ORVRXT1JLLCBVWF9NT0RFLCBnZXRIYXNoUXVlcnlQYXJhbXMgfSBmcm9tICdAdG9ydXNsYWJzL29wZW5sb2dpbic7XG5pbXBvcnQgeyBnZXRDaGFpbkNvbmZpZywgQmFzZUFkYXB0ZXIsIFdBTExFVF9BREFQVEVSUywgQURBUFRFUl9OQU1FU1BBQ0VTLCBBREFQVEVSX0NBVEVHT1JZLCBBREFQVEVSX1NUQVRVUywgQ0hBSU5fTkFNRVNQQUNFUywgbG9nLCBXYWxsZXRJbml0aWFsaXphdGlvbkVycm9yLCBBREFQVEVSX0VWRU5UUywgV2FsbGV0TG9naW5FcnJvciB9IGZyb20gJ0B3ZWIzYXV0aC9iYXNlJztcbmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9kZWZpbmVQcm9wZXJ0eSc7XG5pbXBvcnQgbWVyZ2UgZnJvbSAnbG9kYXNoLm1lcmdlJztcblxuY29uc3QgZ2V0T3BlbmxvZ2luRGVmYXVsdE9wdGlvbnMgPSAoY2hhaW5OYW1lc3BhY2UsIGNoYWluSWQpID0+IHtcbiAgcmV0dXJuIHtcbiAgICBhZGFwdGVyU2V0dGluZ3M6IHtcbiAgICAgIG5ldHdvcms6IE9QRU5MT0dJTl9ORVRXT1JLLk1BSU5ORVQsXG4gICAgICBjbGllbnRJZDogXCJcIixcbiAgICAgIHV4TW9kZTogVVhfTU9ERS5QT1BVUFxuICAgIH0sXG4gICAgY2hhaW5Db25maWc6IGNoYWluTmFtZXNwYWNlID8gZ2V0Q2hhaW5Db25maWcoY2hhaW5OYW1lc3BhY2UsIGNoYWluSWQpIDogdW5kZWZpbmVkLFxuICAgIGxvZ2luU2V0dGluZ3M6IHtcbiAgICAgIHJlbG9naW46IHRydWVcbiAgICB9XG4gIH07XG59O1xuXG5mdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgZW51bWVyYWJsZU9ubHkgJiYgKHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KSksIGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfVxuXG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gbnVsbCAhPSBhcmd1bWVudHNbaV0gPyBhcmd1bWVudHNbaV0gOiB7fTsgaSAlIDIgPyBvd25LZXlzKE9iamVjdChzb3VyY2UpLCAhMCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KSA6IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKSA6IG93bktleXMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gcmV0dXJuIHRhcmdldDsgfVxuY2xhc3MgT3BlbmxvZ2luQWRhcHRlciBleHRlbmRzIEJhc2VBZGFwdGVyIHtcbiAgY29uc3RydWN0b3IocGFyYW1zKSB7XG4gICAgdmFyIF9wYXJhbXMkY2hhaW5Db25maWcsIF9wYXJhbXMkY2hhaW5Db25maWcyLCBfcGFyYW1zJGNoYWluQ29uZmlnMztcblxuICAgIHN1cGVyKCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJuYW1lXCIsIFdBTExFVF9BREFQVEVSUy5PUEVOTE9HSU4pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiYWRhcHRlck5hbWVzcGFjZVwiLCBBREFQVEVSX05BTUVTUEFDRVMuTVVMVElDSEFJTik7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJ0eXBlXCIsIEFEQVBURVJfQ0FURUdPUlkuSU5fQVBQKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm9wZW5sb2dpbkluc3RhbmNlXCIsIG51bGwpO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwic3RhdHVzXCIsIEFEQVBURVJfU1RBVFVTLk5PVF9SRUFEWSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJjdXJyZW50Q2hhaW5OYW1lc3BhY2VcIiwgQ0hBSU5fTkFNRVNQQUNFUy5FSVAxNTUpO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwib3BlbmxvZ2luT3B0aW9uc1wiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwibG9naW5TZXR0aW5nc1wiLCB7fSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJwcml2S2V5UHJvdmlkZXJcIiwgbnVsbCk7XG5cbiAgICBsb2cuZGVidWcoXCJjb25zdCBvcGVubG9naW4gYWRhcHRlclwiLCBwYXJhbXMpO1xuICAgIGNvbnN0IGRlZmF1bHRPcHRpb25zID0gZ2V0T3BlbmxvZ2luRGVmYXVsdE9wdGlvbnMoKF9wYXJhbXMkY2hhaW5Db25maWcgPSBwYXJhbXMuY2hhaW5Db25maWcpID09PSBudWxsIHx8IF9wYXJhbXMkY2hhaW5Db25maWcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9wYXJhbXMkY2hhaW5Db25maWcuY2hhaW5OYW1lc3BhY2UsIChfcGFyYW1zJGNoYWluQ29uZmlnMiA9IHBhcmFtcy5jaGFpbkNvbmZpZykgPT09IG51bGwgfHwgX3BhcmFtcyRjaGFpbkNvbmZpZzIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9wYXJhbXMkY2hhaW5Db25maWcyLmNoYWluSWQpO1xuICAgIHRoaXMub3BlbmxvZ2luT3B0aW9ucyA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7XG4gICAgICBjbGllbnRJZDogXCJcIixcbiAgICAgIG5ldHdvcms6IE9QRU5MT0dJTl9ORVRXT1JLLk1BSU5ORVRcbiAgICB9LCBkZWZhdWx0T3B0aW9ucy5hZGFwdGVyU2V0dGluZ3MpLCBwYXJhbXMuYWRhcHRlclNldHRpbmdzIHx8IHt9KTtcbiAgICB0aGlzLmxvZ2luU2V0dGluZ3MgPSBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGRlZmF1bHRPcHRpb25zLmxvZ2luU2V0dGluZ3MpLCBwYXJhbXMubG9naW5TZXR0aW5ncyk7IC8vIGlmIG5vIGNoYWluTmFtZXNwYWNlIGlzIHBhc3NlZCB0aGVuIGNoYWluIGNvbmZpZyBzaG91bGQgYmUgc2V0IGJlZm9yZSBjYWxsaW5nIGluaXRcblxuICAgIGlmICgoX3BhcmFtcyRjaGFpbkNvbmZpZzMgPSBwYXJhbXMuY2hhaW5Db25maWcpICE9PSBudWxsICYmIF9wYXJhbXMkY2hhaW5Db25maWczICE9PSB2b2lkIDAgJiYgX3BhcmFtcyRjaGFpbkNvbmZpZzMuY2hhaW5OYW1lc3BhY2UpIHtcbiAgICAgIHZhciBfcGFyYW1zJGNoYWluQ29uZmlnNDtcblxuICAgICAgdGhpcy5jdXJyZW50Q2hhaW5OYW1lc3BhY2UgPSAoX3BhcmFtcyRjaGFpbkNvbmZpZzQgPSBwYXJhbXMuY2hhaW5Db25maWcpID09PSBudWxsIHx8IF9wYXJhbXMkY2hhaW5Db25maWc0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfcGFyYW1zJGNoYWluQ29uZmlnNC5jaGFpbk5hbWVzcGFjZTtcbiAgICAgIGNvbnN0IGRlZmF1bHRDaGFpbklkQ29uZmlnID0gZGVmYXVsdE9wdGlvbnMuY2hhaW5Db25maWcgPyBkZWZhdWx0T3B0aW9ucy5jaGFpbkNvbmZpZyA6IHt9O1xuICAgICAgdGhpcy5jaGFpbkNvbmZpZyA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgZGVmYXVsdENoYWluSWRDb25maWcpLCBwYXJhbXMgPT09IG51bGwgfHwgcGFyYW1zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBwYXJhbXMuY2hhaW5Db25maWcpO1xuICAgICAgbG9nLmRlYnVnKFwiY29uc3Qgb3BlbmxvZ2luIGNoYWluQ29uZmlnXCIsIHRoaXMuY2hhaW5Db25maWcpO1xuXG4gICAgICBpZiAoIXRoaXMuY2hhaW5Db25maWcucnBjVGFyZ2V0KSB7XG4gICAgICAgIHRocm93IFdhbGxldEluaXRpYWxpemF0aW9uRXJyb3IuaW52YWxpZFBhcmFtcyhcInJwY1RhcmdldCBpcyByZXF1aXJlZCBpbiBjaGFpbkNvbmZpZ1wiKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBnZXQgY2hhaW5Db25maWdQcm94eSgpIHtcbiAgICByZXR1cm4gdGhpcy5jaGFpbkNvbmZpZyA/IF9vYmplY3RTcHJlYWQoe30sIHRoaXMuY2hhaW5Db25maWcpIDogbnVsbDtcbiAgfVxuXG4gIGdldCBwcm92aWRlcigpIHtcbiAgICB2YXIgX3RoaXMkcHJpdktleVByb3ZpZGVyO1xuXG4gICAgcmV0dXJuICgoX3RoaXMkcHJpdktleVByb3ZpZGVyID0gdGhpcy5wcml2S2V5UHJvdmlkZXIpID09PSBudWxsIHx8IF90aGlzJHByaXZLZXlQcm92aWRlciA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkcHJpdktleVByb3ZpZGVyLnByb3ZpZGVyKSB8fCBudWxsO1xuICB9XG5cbiAgc2V0IHByb3ZpZGVyKF8pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb3QgaW1wbGVtZW50ZWRcIik7XG4gIH1cblxuICBhc3luYyBpbml0KG9wdGlvbnMpIHtcbiAgICB2YXIgX3RoaXMkb3BlbmxvZ2luT3B0aW9uO1xuXG4gICAgc3VwZXIuY2hlY2tJbml0aWFsaXphdGlvblJlcXVpcmVtZW50cygpO1xuICAgIGlmICghKChfdGhpcyRvcGVubG9naW5PcHRpb24gPSB0aGlzLm9wZW5sb2dpbk9wdGlvbnMpICE9PSBudWxsICYmIF90aGlzJG9wZW5sb2dpbk9wdGlvbiAhPT0gdm9pZCAwICYmIF90aGlzJG9wZW5sb2dpbk9wdGlvbi5jbGllbnRJZCkpIHRocm93IFdhbGxldEluaXRpYWxpemF0aW9uRXJyb3IuaW52YWxpZFBhcmFtcyhcImNsaWVudElkIGlzIHJlcXVpcmVkIGJlZm9yZSBvcGVubG9naW4ncyBpbml0aWFsaXphdGlvblwiKTtcbiAgICBpZiAoIXRoaXMuY2hhaW5Db25maWcpIHRocm93IFdhbGxldEluaXRpYWxpemF0aW9uRXJyb3IuaW52YWxpZFBhcmFtcyhcImNoYWluQ29uZmlnIGlzIHJlcXVpcmVkIGJlZm9yZSBpbml0aWFsaXphdGlvblwiKTtcbiAgICB0aGlzLm9wZW5sb2dpbkluc3RhbmNlID0gbmV3IE9wZW5Mb2dpbih0aGlzLm9wZW5sb2dpbk9wdGlvbnMpO1xuICAgIGNvbnN0IHJlZGlyZWN0UmVzdWx0ID0gZ2V0SGFzaFF1ZXJ5UGFyYW1zKCk7XG4gICAgbGV0IGlzUmVkaXJlY3RSZXN1bHQgPSB0cnVlO1xuXG4gICAgaWYgKE9iamVjdC5rZXlzKHJlZGlyZWN0UmVzdWx0KS5sZW5ndGggPiAwICYmIHJlZGlyZWN0UmVzdWx0LnJlc3VsdCkge1xuICAgICAgaXNSZWRpcmVjdFJlc3VsdCA9IHRydWU7XG4gICAgfVxuXG4gICAgYXdhaXQgdGhpcy5vcGVubG9naW5JbnN0YW5jZS5pbml0KCk7XG4gICAgdGhpcy5zdGF0dXMgPSBBREFQVEVSX1NUQVRVUy5SRUFEWTtcbiAgICB0aGlzLmVtaXQoQURBUFRFUl9FVkVOVFMuUkVBRFksIFdBTExFVF9BREFQVEVSUy5PUEVOTE9HSU4pO1xuXG4gICAgdHJ5IHtcbiAgICAgIC8vIGNvbm5lY3Qgb25seSBpZiBpdCBpcyByZWRpcmVjdCByZXN1bHQgb3IgaWYgY29ubmVjdCAoYWRhcHRlciBpcyBjYWNoZWQvYWxyZWFkeSBjb25uZWN0ZWQgaW4gc2FtZSBzZXNzaW9uKSBpcyB0cnVlXG4gICAgICBpZiAodGhpcy5vcGVubG9naW5JbnN0YW5jZS5wcml2S2V5ICYmIChvcHRpb25zLmF1dG9Db25uZWN0IHx8IGlzUmVkaXJlY3RSZXN1bHQpKSB7XG4gICAgICAgIGF3YWl0IHRoaXMuY29ubmVjdCgpO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBsb2cuZXJyb3IoXCJGYWlsZWQgdG8gY29ubmVjdCB3aXRoIGNhY2hlZCBvcGVubG9naW4gcHJvdmlkZXJcIiwgZXJyb3IpO1xuICAgICAgdGhpcy5lbWl0KFwiRVJST1JFRFwiLCBlcnJvcik7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgY29ubmVjdChwYXJhbXMpIHtcbiAgICBzdXBlci5jaGVja0Nvbm5lY3Rpb25SZXF1aXJlbWVudHMoKTtcbiAgICB0aGlzLnN0YXR1cyA9IEFEQVBURVJfU1RBVFVTLkNPTk5FQ1RJTkc7XG4gICAgdGhpcy5lbWl0KEFEQVBURVJfRVZFTlRTLkNPTk5FQ1RJTkcsIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgcGFyYW1zKSwge30sIHtcbiAgICAgIGFkYXB0ZXI6IFdBTExFVF9BREFQVEVSUy5PUEVOTE9HSU5cbiAgICB9KSk7XG5cbiAgICB0cnkge1xuICAgICAgYXdhaXQgdGhpcy5jb25uZWN0V2l0aFByb3ZpZGVyKHBhcmFtcyk7XG4gICAgICByZXR1cm4gdGhpcy5wcm92aWRlcjtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgbG9nLmVycm9yKFwiRmFpbGVkIHRvIGNvbm5lY3Qgd2l0aCBvcGVubG9naW4gcHJvdmlkZXJcIiwgZXJyb3IpOyAvLyByZWFkeSBhZ2FpbiB0byBiZSBjb25uZWN0ZWRcblxuICAgICAgdGhpcy5zdGF0dXMgPSBBREFQVEVSX1NUQVRVUy5SRUFEWTtcbiAgICAgIHRoaXMuZW1pdChBREFQVEVSX0VWRU5UUy5FUlJPUkVELCBlcnJvcik7XG5cbiAgICAgIGlmIChlcnJvciAhPT0gbnVsbCAmJiBlcnJvciAhPT0gdm9pZCAwICYmIGVycm9yLm1lc3NhZ2UuaW5jbHVkZXMoXCJ1c2VyIGNsb3NlZCBwb3B1cFwiKSkge1xuICAgICAgICB0aHJvdyBXYWxsZXRMb2dpbkVycm9yLnBvcHVwQ2xvc2VkKCk7XG4gICAgICB9XG5cbiAgICAgIHRocm93IFdhbGxldExvZ2luRXJyb3IuY29ubmVjdGlvbkVycm9yKFwiRmFpbGVkIHRvIGxvZ2luIHdpdGggb3BlbmxvZ2luXCIpO1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIGRpc2Nvbm5lY3QoKSB7XG4gICAgbGV0IG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHtcbiAgICAgIGNsZWFudXA6IGZhbHNlXG4gICAgfTtcbiAgICBpZiAodGhpcy5zdGF0dXMgIT09IEFEQVBURVJfU1RBVFVTLkNPTk5FQ1RFRCkgdGhyb3cgV2FsbGV0TG9naW5FcnJvci5ub3RDb25uZWN0ZWRFcnJvcihcIk5vdCBjb25uZWN0ZWQgd2l0aCB3YWxsZXRcIik7XG4gICAgaWYgKCF0aGlzLm9wZW5sb2dpbkluc3RhbmNlKSB0aHJvdyBXYWxsZXRJbml0aWFsaXphdGlvbkVycm9yLm5vdFJlYWR5KFwib3BlbmxvZ2luSW5zdGFuY2UgaXMgbm90IHJlYWR5XCIpO1xuICAgIGF3YWl0IHRoaXMub3BlbmxvZ2luSW5zdGFuY2UubG9nb3V0KCk7XG5cbiAgICBpZiAob3B0aW9ucy5jbGVhbnVwKSB7XG4gICAgICB0aGlzLnN0YXR1cyA9IEFEQVBURVJfU1RBVFVTLk5PVF9SRUFEWTtcbiAgICAgIHRoaXMub3BlbmxvZ2luSW5zdGFuY2UgPSBudWxsO1xuICAgICAgdGhpcy5wcml2S2V5UHJvdmlkZXIgPSBudWxsO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyByZWFkeSB0byBiZSBjb25uZWN0ZWQgYWdhaW5cbiAgICAgIHRoaXMuc3RhdHVzID0gQURBUFRFUl9TVEFUVVMuUkVBRFk7XG4gICAgfVxuXG4gICAgdGhpcy5lbWl0KEFEQVBURVJfRVZFTlRTLkRJU0NPTk5FQ1RFRCk7XG4gIH1cblxuICBhc3luYyBnZXRVc2VySW5mbygpIHtcbiAgICBpZiAodGhpcy5zdGF0dXMgIT09IEFEQVBURVJfU1RBVFVTLkNPTk5FQ1RFRCkgdGhyb3cgV2FsbGV0TG9naW5FcnJvci5ub3RDb25uZWN0ZWRFcnJvcihcIk5vdCBjb25uZWN0ZWQgd2l0aCB3YWxsZXRcIik7XG4gICAgaWYgKCF0aGlzLm9wZW5sb2dpbkluc3RhbmNlKSB0aHJvdyBXYWxsZXRJbml0aWFsaXphdGlvbkVycm9yLm5vdFJlYWR5KFwib3BlbmxvZ2luSW5zdGFuY2UgaXMgbm90IHJlYWR5XCIpO1xuICAgIGNvbnN0IHVzZXJJbmZvID0gYXdhaXQgdGhpcy5vcGVubG9naW5JbnN0YW5jZS5nZXRVc2VySW5mbygpO1xuICAgIHJldHVybiB1c2VySW5mbztcbiAgfSAvLyBzaG91bGQgYmUgY2FsbGVkIG9ubHkgYmVmb3JlIGluaXRpYWxpemF0aW9uLlxuXG5cbiAgc2V0QWRhcHRlclNldHRpbmdzKGFkYXB0ZXJTZXR0aW5ncykge1xuICAgIGlmICh0aGlzLnN0YXR1cyA9PT0gQURBUFRFUl9TVEFUVVMuUkVBRFkpIHJldHVybjtcbiAgICBjb25zdCBkZWZhdWx0T3B0aW9ucyA9IGdldE9wZW5sb2dpbkRlZmF1bHRPcHRpb25zKCk7XG4gICAgdGhpcy5vcGVubG9naW5PcHRpb25zID0gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGRlZmF1bHRPcHRpb25zLmFkYXB0ZXJTZXR0aW5ncyksIHRoaXMub3BlbmxvZ2luT3B0aW9ucyB8fCB7fSksIGFkYXB0ZXJTZXR0aW5ncyk7XG4gIH0gLy8gc2hvdWxkIGJlIGNhbGxlZCBvbmx5IGJlZm9yZSBpbml0aWFsaXphdGlvbi5cblxuXG4gIHNldENoYWluQ29uZmlnKGN1c3RvbUNoYWluQ29uZmlnKSB7XG4gICAgc3VwZXIuc2V0Q2hhaW5Db25maWcoY3VzdG9tQ2hhaW5Db25maWcpO1xuICAgIHRoaXMuY3VycmVudENoYWluTmFtZXNwYWNlID0gY3VzdG9tQ2hhaW5Db25maWcuY2hhaW5OYW1lc3BhY2U7XG4gIH1cblxuICBhc3luYyBjb25uZWN0V2l0aFByb3ZpZGVyKHBhcmFtcykge1xuICAgIGlmICghdGhpcy5jaGFpbkNvbmZpZykgdGhyb3cgV2FsbGV0SW5pdGlhbGl6YXRpb25FcnJvci5pbnZhbGlkUGFyYW1zKFwiY2hhaW5Db25maWcgaXMgcmVxdWlyZWQgYmVmb3JlIGluaXRpYWxpemF0aW9uXCIpO1xuICAgIGlmICghdGhpcy5vcGVubG9naW5JbnN0YW5jZSkgdGhyb3cgV2FsbGV0SW5pdGlhbGl6YXRpb25FcnJvci5ub3RSZWFkeShcIm9wZW5sb2dpbkluc3RhbmNlIGlzIG5vdCByZWFkeVwiKTtcblxuICAgIGlmICh0aGlzLmN1cnJlbnRDaGFpbk5hbWVzcGFjZSA9PT0gQ0hBSU5fTkFNRVNQQUNFUy5TT0xBTkEpIHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgU29sYW5hUHJpdmF0ZUtleVByb3ZpZGVyXG4gICAgICB9ID0gYXdhaXQgaW1wb3J0KCdAd2ViM2F1dGgvc29sYW5hLXByb3ZpZGVyJyk7XG4gICAgICB0aGlzLnByaXZLZXlQcm92aWRlciA9IG5ldyBTb2xhbmFQcml2YXRlS2V5UHJvdmlkZXIoe1xuICAgICAgICBjb25maWc6IHtcbiAgICAgICAgICBjaGFpbkNvbmZpZzogdGhpcy5jaGFpbkNvbmZpZ1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKHRoaXMuY3VycmVudENoYWluTmFtZXNwYWNlID09PSBDSEFJTl9OQU1FU1BBQ0VTLkVJUDE1NSkge1xuICAgICAgY29uc3Qge1xuICAgICAgICBFdGhlcmV1bVByaXZhdGVLZXlQcm92aWRlclxuICAgICAgfSA9IGF3YWl0IGltcG9ydCgnQHdlYjNhdXRoL2V0aGVyZXVtLXByb3ZpZGVyJyk7XG4gICAgICB0aGlzLnByaXZLZXlQcm92aWRlciA9IG5ldyBFdGhlcmV1bVByaXZhdGVLZXlQcm92aWRlcih7XG4gICAgICAgIGNvbmZpZzoge1xuICAgICAgICAgIGNoYWluQ29uZmlnOiB0aGlzLmNoYWluQ29uZmlnXG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGNoYWluTmFtZXNwYWNlOiBcIi5jb25jYXQodGhpcy5jdXJyZW50Q2hhaW5OYW1lc3BhY2UsIFwiIGZvdW5kIHdoaWxlIGNvbm5lY3RpbmcgdG8gd2FsbGV0XCIpKTtcbiAgICB9IC8vIGlmIG5vdCBsb2dnZWQgaW4gdGhlbiBsb2dpblxuXG5cbiAgICBpZiAoIXRoaXMub3BlbmxvZ2luSW5zdGFuY2UucHJpdktleSAmJiBwYXJhbXMpIHtcbiAgICAgIGF3YWl0IHRoaXMub3BlbmxvZ2luSW5zdGFuY2UubG9naW4obWVyZ2UodGhpcy5sb2dpblNldHRpbmdzLCB7XG4gICAgICAgIGxvZ2luUHJvdmlkZXI6IHBhcmFtcy5sb2dpblByb3ZpZGVyXG4gICAgICB9LCB7XG4gICAgICAgIGV4dHJhTG9naW5PcHRpb25zOiB7XG4gICAgICAgICAgbG9naW5faGludDogcGFyYW1zID09PSBudWxsIHx8IHBhcmFtcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogcGFyYW1zLmxvZ2luX2hpbnRcbiAgICAgICAgfVxuICAgICAgfSkpO1xuICAgIH1cblxuICAgIGxldCBmaW5hbFByaXZLZXkgPSB0aGlzLm9wZW5sb2dpbkluc3RhbmNlLnByaXZLZXk7XG5cbiAgICBpZiAoZmluYWxQcml2S2V5KSB7XG4gICAgICBpZiAodGhpcy5jdXJyZW50Q2hhaW5OYW1lc3BhY2UgPT09IENIQUlOX05BTUVTUEFDRVMuU09MQU5BKSB7XG4gICAgICAgIGNvbnN0IHtcbiAgICAgICAgICBnZXRFRDI1NTE5S2V5XG4gICAgICAgIH0gPSBhd2FpdCBpbXBvcnQoJ0B0b3J1c2xhYnMvb3BlbmxvZ2luLWVkMjU1MTknKTtcbiAgICAgICAgZmluYWxQcml2S2V5ID0gZ2V0RUQyNTUxOUtleShmaW5hbFByaXZLZXkpLnNrLnRvU3RyaW5nKFwiaGV4XCIpO1xuICAgICAgfVxuXG4gICAgICBhd2FpdCB0aGlzLnByaXZLZXlQcm92aWRlci5zZXR1cFByb3ZpZGVyKGZpbmFsUHJpdktleSk7XG4gICAgICB0aGlzLnN0YXR1cyA9IEFEQVBURVJfU1RBVFVTLkNPTk5FQ1RFRDtcbiAgICAgIHRoaXMuZW1pdChBREFQVEVSX0VWRU5UUy5DT05ORUNURUQsIHtcbiAgICAgICAgYWRhcHRlcjogV0FMTEVUX0FEQVBURVJTLk9QRU5MT0dJTixcbiAgICAgICAgcmVjb25uZWN0ZWQ6ICFwYXJhbXNcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG59XG5cbmV4cG9ydCB7IE9wZW5sb2dpbkFkYXB0ZXIsIGdldE9wZW5sb2dpbkRlZmF1bHRPcHRpb25zIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vcGVubG9naW5BZGFwdGVyLmVzbS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@web3auth/openlogin-adapter/dist/openloginAdapter.esm.js\n");

/***/ })

}]);